{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport * as THREE from \"three\";\nimport FOG from \"vanta/src/vanta.fog\"; // 引入FOG效果\n\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      avatar: null,\n      avatarPreview: null,\n      isError: '',\n      showLoginForm: true,\n      captchaSrc: \"\",\n      loginForm: {\n        username: \"\",\n        password: \"\",\n        captcha: \"\"\n      },\n      registerForm: {\n        nickname: \"\",\n        username: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        avatar: null\n      }\n    };\n  },\n  methods: {\n    login() {\n      axios.post('http://localhost:8080/login', this.loginForm, {\n        withCredentials: true\n      }).then(res => {\n        console.log(res); // 查看响应结构\n        // 确保后端返回的数据结构正确\n        if (res.data && res.data.code === 200) {\n          // 确认token字段名称是否匹配\n          localStorage.setItem('token', res.data.data.token || res.data.token);\n          // 添加跳转前的延迟\n          setTimeout(() => {\n            this.$router.push({\n              name: 'Home'\n            });\n          }, 100);\n        } else {\n          this.isError = res.data?.message || '登录失败';\n        }\n      }).catch(error => {\n        console.error('登录错误:', error); // 显示详细错误\n        this.isError = error.response?.data?.message || '网络错误';\n      });\n    },\n    getCaptcha() {\n      axios.get('http://localhost:8080/captcha', {\n        responseType: 'blob',\n        withCredentials: true\n      }).then(res => {\n        let imgUrl = URL.createObjectURL(res.data);\n        this.captchaSrc = imgUrl;\n      }).catch(() => {\n        this.isError = '获取验证码失败';\n      });\n    },\n    triggerAvatar() {\n      this.$refs.avatarInput.click();\n    },\n    chooseAvatar(event) {\n      const file = event.target.files[0];\n      if (file) {\n        this.registerForm.avatar = file;\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.avatarPreview = e.target.result;\n        };\n        reader.readAsDataURL(file);\n      }\n    },\n    async register() {\n      // 密码确认校验\n      if (this.registerForm.password !== this.registerForm.confirmPassword) {\n        this.isError = \"两次输入的密码不一致\";\n        return;\n      }\n      const formData = new FormData();\n      formData.append('nickname', this.registerForm.nickname);\n      formData.append('username', this.registerForm.username);\n      formData.append('password', this.registerForm.password);\n\n      // 添加头像文件\n      if (this.$refs.avatarInput.files[0]) {\n        formData.append('avatar', this.$refs.avatarInput.files[0]);\n      }\n      try {\n        const response = await axios.post('http://localhost:8080/register', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          },\n          withCredentials: true\n        });\n        if (response.data.code === 200) {\n          alert('注册成功');\n          this.showLoginForm = true; // 切换回登录界面\n          // 清空表单\n          this.registerForm = {\n            nickname: \"\",\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            avatar: null\n          };\n          this.avatarPreview = null;\n        } else {\n          this.isError = response.data.message;\n        }\n      } catch (error) {\n        this.isError = error.response?.data?.message || '注册失败';\n      }\n    }\n  },\n  mounted() {\n    this.getCaptcha(); // 组件挂载时获取验证码\n    // 在mounted中初始化VANTA效果\n    this.vantaEffect = FOG({\n      el: this.$refs.vantaRef,\n      // 绑定到ref\n      THREE: THREE,\n      mouseControls: true,\n      touchControls: true,\n      gyroControls: false,\n      minHeight: 200.00,\n      minWidth: 200.00,\n      highlightColor: 0xf5f5bc,\n      blurFactor: 0.90,\n      zoom: 1\n    });\n  },\n  beforeDestroy() {\n    // 销毁VANTA效果\n    if (this.vantaEffect) {\n      this.vantaEffect.destroy();\n    }\n  }\n};","map":{"version":3,"names":["axios","THREE","FOG","name","data","avatar","avatarPreview","isError","showLoginForm","captchaSrc","loginForm","username","password","captcha","registerForm","nickname","confirmPassword","methods","login","post","withCredentials","then","res","console","log","code","localStorage","setItem","token","setTimeout","$router","push","message","catch","error","response","getCaptcha","get","responseType","imgUrl","URL","createObjectURL","triggerAvatar","$refs","avatarInput","click","chooseAvatar","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","register","formData","FormData","append","headers","alert","mounted","vantaEffect","el","vantaRef","mouseControls","touchControls","gyroControls","minHeight","minWidth","highlightColor","blurFactor","zoom","beforeDestroy","destroy"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"background\">\n\n        <div v-show=\"showLoginForm\" class=\"login-container\">\n            <div class=\"login-title\">\n                <div class=\"login-title-text\">{{ showLoginForm ? 'Login' : 'Register' }}</div>\n                <div class=\"login-title-subtext\">Numerous related previews available</div>\n            </div>\n\n            <div class=\"login-form\">\n                <div class=\"login-form-item\">\n                    <div class=\"login-user-name\">\n                        <div class=\"login-user-name-label\">Username</div>\n\n                        <input class=\"login-user-name-input\" type=\"text\" placeholder=\"Enter your username\"\n                            v-model=\"loginForm.username\">\n\n                    </div>\n\n                    <div class=\"login-password\">\n                        <div class=\"login-password-label\">Password</div>\n\n                        <input class=\"login-password-input\" type=\"password\" placeholder=\"Enter your password\"\n                            v-model=\"loginForm.password\">\n\n                    </div>\n\n                    <div class=\"captcha\">\n                        <input class=\"captcha-input\" type=\"text\" placeholder=\"Enter your captcha\"\n                            v-model=\"loginForm.captcha\">\n                        <img class=\"captcha-img\" @click=\"getCaptcha\" :src=\"captchaSrc\">\n                    </div>\n                </div>\n\n\n                <div class=\"tips\">\n                    <div class=\"tips-text\" :style=\"{ visibility: isError === '' ? 'hidden' : 'visible' }\">\n                        {{ isError }}\n                    </div>\n\n                    <div class=\"forget-button\">forget password?</div>\n                </div>\n\n                <button class=\"login-button\" @click=\"login\">Login</button>\n            </div>\n\n            <div class=\"register-tips\">New User? <span class=\"register-tips-button\"\n                    @click=\"showLoginForm = !showLoginForm\">Signup</span></div>\n\n        </div>\n\n        <div v-show=\"!showLoginForm\" class=\"register-container\" :style=\"{ height: showLoginForm ? '650px' : '780px' }\">\n            <div class=\"register-title\">\n                <div class=\"register-title-text\">Register</div>\n\n            </div>\n\n            <div class=\"register-form-item\">\n                <div class=\"avatar\">\n                    <input type=\"file\" class=\"avatar-input\" ref=\"avatarInput\" style=\"display: none;\" \n                        @change=\"chooseAvatar\" accept=\"image/*\" />\n                    <img :src=\"avatarPreview\" alt=\"\" class=\"choose-avatar\" @click=\"triggerAvatar\" />\n                </div>\n\n                <div class=\"register-nickname\">\n                    <div class=\"register-nickname-label\">Nickname</div>\n                    <input class=\"register-nickname-input\" type=\"text\" placeholder=\"Enter your nickname\"\n                        v-model=\"registerForm.nickname\">\n                </div>\n\n                <div class=\"register-user-name\">\n                    <div class=\"register-user-name-label\">Username</div>\n\n                    <input class=\"register-user-name-input\" type=\"text\" placeholder=\"Enter your username\"\n                        v-model=\"registerForm.username\">\n\n                </div>\n\n                <div class=\"register-password\">\n                    <div class=\"register-password-label\">Password</div>\n\n                    <input class=\"register-password-input\" type=\"password\" placeholder=\"Enter your password\"\n                        v-model=\"registerForm.password\">\n                    <input class=\"register-password-input\" type=\"password\" placeholder=\"Confirm your password\"\n                        v-model=\"registerForm.confirmPassword\">\n\n                </div>\n\n            </div>\n\n            <button class=\"register-button\" @click=\"register\">Register</button>\n            <div class=\"register-tips\">Already have an account? <span class=\"register-tips-button\"\n                    @click=\"showLoginForm = !showLoginForm\">Login</span></div>\n        </div>\n        <div class=\"login-footer\" ref=\"vantaRef\" :style=\"{ height: showLoginForm ? '650px' : '780px' }\">\n            <div class=\"login-footer-text-title\">WELLCOME</div>\n            <div class=\"login-footer-text-subtext\">{{ showLoginForm ? 'BACK!' : 'SIGNUP!' }}</div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as THREE from \"three\";\nimport FOG from \"vanta/src/vanta.fog\";  // 引入FOG效果\n\nexport default {\n    name: 'UserLogin',\n    data() {\n        return {\n            avatar: null,\n            avatarPreview: null,\n            isError: '',\n            showLoginForm: true,\n            captchaSrc: \"\",\n\n            loginForm: {\n                username: \"\",\n                password: \"\",\n                captcha: \"\"\n            },\n            registerForm: {\n                nickname: \"\",\n                username: \"\",\n                password: \"\",\n                confirmPassword: \"\",\n                avatar: null\n            }\n        }\n    },\n\n\n    methods: {\n        login() {\n            axios.post('http://localhost:8080/login', this.loginForm, {\n                withCredentials: true\n            }).then(res => {\n                console.log(res); // 查看响应结构\n                // 确保后端返回的数据结构正确\n                if (res.data && res.data.code === 200) {\n                    // 确认token字段名称是否匹配\n                    localStorage.setItem('token', res.data.data.token || res.data.token);\n                    // 添加跳转前的延迟\n                    setTimeout(() => {\n                        this.$router.push({ name: 'Home' });\n                    }, 100);\n                } else {\n                    this.isError = res.data?.message || '登录失败';\n                }\n            }).catch(error => {\n                console.error('登录错误:', error); // 显示详细错误\n                this.isError = error.response?.data?.message || '网络错误';\n            });\n        },\n        getCaptcha() {\n            axios.get('http://localhost:8080/captcha', {\n                responseType: 'blob',\n                withCredentials: true\n            })\n            .then(res => {\n                let imgUrl = URL.createObjectURL(res.data);\n                this.captchaSrc = imgUrl;\n            })\n            .catch(() => {\n                this.isError = '获取验证码失败';\n            });\n        },\n\n\n        triggerAvatar() {\n            this.$refs.avatarInput.click();\n        },\n        chooseAvatar(event) {\n            const file = event.target.files[0];\n            if (file) {\n                this.registerForm.avatar = file;\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    this.avatarPreview = e.target.result;\n                };\n                reader.readAsDataURL(file);\n            }\n        },\n        async register() {\n            // 密码确认校验\n            if (this.registerForm.password !== this.registerForm.confirmPassword) {\n                this.isError = \"两次输入的密码不一致\";\n                return;\n            }\n\n            const formData = new FormData();\n            formData.append('nickname', this.registerForm.nickname);\n            formData.append('username', this.registerForm.username);\n            formData.append('password', this.registerForm.password);\n            \n            // 添加头像文件\n            if (this.$refs.avatarInput.files[0]) {\n                formData.append('avatar', this.$refs.avatarInput.files[0]);\n            }\n\n            try {\n                const response = await axios.post('http://localhost:8080/register', formData, {\n                    headers: {\n                        'Content-Type': 'multipart/form-data'\n                    },\n                    withCredentials: true\n                });\n                \n                if (response.data.code === 200) {\n                    alert('注册成功');\n                    this.showLoginForm = true; // 切换回登录界面\n                    // 清空表单\n                    this.registerForm = {\n                        nickname: \"\",\n                        username: \"\",\n                        password: \"\",\n                        confirmPassword: \"\",\n                        avatar: null\n                    };\n                    this.avatarPreview = null;\n                } else {\n                    this.isError = response.data.message;\n                }\n            } catch (error) {\n                this.isError = error.response?.data?.message || '注册失败';\n            }\n        },\n    },\n    mounted() {\n        this.getCaptcha(); // 组件挂载时获取验证码\n        // 在mounted中初始化VANTA效果\n        this.vantaEffect = FOG({\n            el: this.$refs.vantaRef,  // 绑定到ref\n            THREE: THREE,\n            mouseControls: true,\n            touchControls: true,\n            gyroControls: false,\n            minHeight: 200.00,\n            minWidth: 200.00,\n            highlightColor: 0xf5f5bc,\n            blurFactor: 0.90,\n            zoom: 1\n        });\n    },\n    beforeDestroy() {\n        // 销毁VANTA效果\n        if (this.vantaEffect) {\n            this.vantaEffect.destroy();\n        }\n    }\n}\n</script>\n\n<style scoped src=\"./css/login.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}