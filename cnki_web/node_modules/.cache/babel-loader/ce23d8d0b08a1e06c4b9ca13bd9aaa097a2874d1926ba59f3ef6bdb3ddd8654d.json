{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport axios from \"axios\";\nimport { debounce } from \"lodash\";\nimport SettingsDialog from \"../components/SettingsDialog.vue\";\nimport UploadDialog from \"../components/UploadDialog.vue\";\nexport default {\n  name: \"HomePage\",\n  components: {\n    SettingsDialog,\n    UploadDialog\n  },\n  data() {\n    return {\n      keyword: \"\",\n      username: \"Guest\",\n      nickname: \"Rick\",\n      userAvatar: null,\n      avatarLoadError: false,\n      searchValue: \"\",\n      selectedIndex: 0,\n      papers: [],\n      // 当前显示的论文列表\n      options: [{\n        text: \"recommend\",\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path></svg>`\n      }, {\n        text: \"newest\",\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle></svg>`\n      }, {\n        text: \"History\",\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-clock\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline></svg>`\n      }, {\n        text: \"collect\",\n        icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-star\"><polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon></svg>`\n      }],\n      searchHistory: JSON.parse(localStorage.getItem(\"searchHistory\") || \"[]\"),\n      searchResult: [],\n      showMenu: false,\n      showSearch: false,\n      unreadCount: 3,\n      // 模拟未读消息\n      debouncedSearch: null,\n      loading: false,\n      searchLoading: false,\n      showSettingsDialog: false,\n      currentSettings: null,\n      showUploadDialog: false\n    };\n  },\n  computed: {\n    greeting() {\n      const hour = new Date().getHours();\n      if (hour < 5) {\n        return \"Night Owl\";\n      } else if (hour < 12) {\n        return \"Morning\";\n      } else if (hour < 18) {\n        return \"Afternoon\";\n      } else {\n        return \"Evening\";\n      }\n    },\n    avatarInitial() {\n      if (this.nickname) {\n        return this.nickname.charAt(0).toUpperCase();\n      }\n      return this.username.charAt(0).toUpperCase();\n    }\n  },\n  methods: {\n    async getLatest() {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/papers/latest`, {\n          params: {\n            username: this.username\n          }\n        });\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取最新论文失败\", error);\n      }\n    },\n    async getRecommend() {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/papers/recommend`, {\n          params: {\n            username: this.username,\n            limit: 100\n          }\n        });\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取推荐失败\", error);\n      }\n    },\n    async handleSearch() {\n      if (!this.keyword.trim()) return;\n      this.searchLoading = true;\n      try {\n        const response = await axios.get(`http://localhost:8080/api/papers/search`, {\n          params: {\n            keyword: this.keyword,\n            username: this.username\n          }\n        });\n        this.searchResult = response.data.data;\n\n        // 将搜索关键词添加到历史记录\n        if (!this.searchHistory.includes(this.keyword)) {\n          this.searchHistory.unshift(this.keyword);\n          // 限制历史记录数量\n          if (this.searchHistory.length > 10) {\n            this.searchHistory.pop();\n          }\n          localStorage.setItem(\"searchHistory\", JSON.stringify(this.searchHistory));\n        }\n      } catch (error) {\n        console.error(\"搜索失败\", error);\n      } finally {\n        this.searchLoading = false;\n      }\n    },\n    async selectOption(index) {\n      this.showSearch = false;\n      this.loading = true;\n      this.selectedIndex = index;\n      try {\n        switch (index) {\n          case 0:\n            await this.getRecommend();\n            break;\n          case 1:\n            await this.getLatest();\n            break;\n          case 2:\n            await this.getHistory();\n            break;\n          case 3:\n            await this.getFavorites();\n            break;\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n    handleAvatarError() {\n      this.avatarLoadError = true;\n      this.userAvatar = null; // 清空错误头像\n    },\n    showProfile() {\n      console.log(\"打开个人资料\");\n    },\n    showNotifications() {\n      console.log(\"查看通知\");\n    },\n    showSettings() {\n      this.currentSettings = {\n        username: this.username,\n        nickname: this.nickname,\n        avatar: this.userAvatar\n      };\n      this.showSettingsDialog = true;\n    },\n    logout() {\n      localStorage.removeItem(\"isLoggedIn\");\n      this.$router.push(\"/\");\n    },\n    async toggleFavorite(paperId) {\n      try {\n        const paper = [...this.papers, ...this.searchResult].find(p => p.paperId === paperId);\n        if (!paper) return;\n        if (paper.isFavorited) {\n          // 取消收藏\n          const response = await axios.delete(`http://localhost:8080/api/papers/favorite`, {\n            params: {\n              username: this.username,\n              paperId: paperId\n            }\n          });\n          if (response.data.code === 200) {\n            this.updatePaperInAllLists(response.data.data);\n            // 如果在收藏列表页面，立即移除该论文\n            if (this.selectedIndex === 3) {\n              this.papers = this.papers.filter(p => p.paperId !== paperId);\n            }\n          }\n        } else {\n          // 添加收藏\n          const response = await axios.post(`http://localhost:8080/api/papers/favorite`, null, {\n            params: {\n              username: this.username,\n              paperId: paperId\n            }\n          });\n          if (response.data.code === 200) {\n            this.updatePaperInAllLists(response.data.data);\n          }\n        }\n      } catch (error) {\n        console.error(\"收藏操作失败\", error);\n      }\n    },\n    updatePaperInAllLists(paperData) {\n      // 更新推荐/历史列表\n      const paperIndex = this.papers.findIndex(p => p.paperId === paperData.paperId);\n      if (paperIndex !== -1) {\n        this.$set(this.papers, paperIndex, {\n          ...this.papers[paperIndex],\n          isFavorited: paperData.isFavorited\n        });\n      }\n\n      // 更新搜索结果列表\n      const searchIndex = this.searchResult.findIndex(p => p.paperId === paperData.paperId);\n      if (searchIndex !== -1) {\n        this.$set(this.searchResult, searchIndex, {\n          ...this.searchResult[searchIndex],\n          isFavorited: paperData.isFavorited\n        });\n      }\n    },\n    viewPdf(pdfUrl, paperId) {\n      console.log(\"查看pdf\", paperId);\n      window.open(pdfUrl, \"_blank\");\n      console.log(\"查看pdf\", this.username, paperId);\n      axios.post(`http://localhost:8080/api/papers/view?username=${this.username}&paperId=${paperId}`).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.error(\"查看pdf失败\", error);\n      });\n    },\n    async getHistory() {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/papers/view-history`, {\n          params: {\n            username: this.username\n          }\n        });\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取浏览历史失败\", error);\n      }\n    },\n    formatViewTime(timeString) {\n      if (!timeString) return \"\";\n      const viewTime = new Date(timeString);\n      const now = new Date();\n      const diff = now - viewTime;\n\n      // 小于1小时\n      if (diff < 3600000) {\n        const minutes = Math.floor(diff / 60000);\n        return `${minutes} 分钟前`;\n      }\n      // 小于24小时\n      if (diff < 86400000) {\n        const hours = Math.floor(diff / 3600000);\n        return `${hours} 小时前`;\n      }\n      // 小于7天\n      if (diff < 604800000) {\n        const days = Math.floor(diff / 86400000);\n        return `${days} 天前`;\n      }\n      // 其他情况显示具体日期\n      return viewTime.toLocaleDateString();\n    },\n    async getFavorites() {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/papers/favorites`, {\n          params: {\n            username: this.username\n          }\n        });\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取收藏列表失败\", error);\n      }\n    },\n    useHistorySearch(keyword) {\n      this.keyword = keyword;\n      this.handleSearch();\n    },\n    clearHistory() {\n      this.searchHistory = [];\n      localStorage.removeItem(\"searchHistory\");\n    },\n    handleSettingsUpdated(newSettings) {\n      // 更新本地状态\n      this.username = newSettings.username;\n      this.nickname = newSettings.nickname;\n      this.userAvatar = newSettings.avatar;\n      this.avatarLoadError = false; // 重置头像加载错误状态\n\n      // 如果头像加载失败，会触发 handleAvatarError\n      const img = new Image();\n      img.onerror = () => {\n        this.handleAvatarError();\n      };\n      img.src = newSettings.avatar;\n      this.getUserInfo(this.username);\n      // 可以添加提示\n      alert(\"设置已更新\");\n    },\n    showUpload() {\n      this.showUploadDialog = true;\n    },\n    handleUploadSuccess(paperData) {\n      // 可以根据需要刷新论文列表\n      this.selectOption(this.selectedIndex);\n      // 可以将新上传的论文添加到当前列表\n      if (this.selectedIndex === 1) {\n        // 如果在\"最新\"标签页\n        this.papers.unshift(paperData);\n      }\n      // 显示成功提示\n      alert(\"论文上传成功\");\n    },\n    getUserInfo(token) {\n      const username = token;\n      console.log(token, \"token\");\n      axios.get(\"http://localhost:8080/api/user/info\", {\n        params: {\n          username: username\n        }\n      }).then(response => {\n        console.log(\"获取用户信息成功:\", response);\n        this.username = response.data.data.username;\n        this.userAvatar = response.data.data.avatar;\n        this.nickname = response.data.data.nickname;\n      }).catch(error => {\n        console.error(\"获取用户信息失败:\", error);\n      });\n    }\n  },\n  mounted() {\n    this.selectOption(0); // 默认加载推荐\n  },\n  created() {\n    this.getUserInfo(String(this.$route.params.username));\n    this.debouncedSearch = debounce(this.handleSearch, 1000);\n  }\n};","map":{"version":3,"names":["axios","debounce","SettingsDialog","UploadDialog","name","components","data","keyword","username","nickname","userAvatar","avatarLoadError","searchValue","selectedIndex","papers","options","text","icon","searchHistory","JSON","parse","localStorage","getItem","searchResult","showMenu","showSearch","unreadCount","debouncedSearch","loading","searchLoading","showSettingsDialog","currentSettings","showUploadDialog","computed","greeting","hour","Date","getHours","avatarInitial","charAt","toUpperCase","methods","getLatest","response","get","params","error","console","getRecommend","limit","handleSearch","trim","includes","unshift","length","pop","setItem","stringify","selectOption","index","getHistory","getFavorites","handleAvatarError","showProfile","log","showNotifications","showSettings","avatar","logout","removeItem","$router","push","toggleFavorite","paperId","paper","find","p","isFavorited","delete","code","updatePaperInAllLists","filter","post","paperData","paperIndex","findIndex","$set","searchIndex","viewPdf","pdfUrl","window","open","then","catch","formatViewTime","timeString","viewTime","now","diff","minutes","Math","floor","hours","days","toLocaleDateString","useHistorySearch","clearHistory","handleSettingsUpdated","newSettings","img","Image","onerror","src","getUserInfo","alert","showUpload","handleUploadSuccess","token","mounted","created","String","$route"],"sources":["src/views/Home.vue"],"sourcesContent":["<template>\n  <div class=\"background\">\n    <div class=\"navbar\">\n      <div class=\"option-tools\">\n        <div\n          v-for=\"(option, index) in options\"\n          :key=\"index\"\n          :class=\"['option-icon', { selected: selectedIndex === index }]\"\n          @click=\"selectOption(index)\"\n        >\n          <div v-html=\"option.icon\"></div>\n          <div class=\"recommend-text\">{{ option.text }}</div>\n        </div>\n        <form class=\"search-bar\" @submit.prevent=\"search\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"28\"\n            height=\"28\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            stroke-width=\"2\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            class=\"feather feather-search\"\n          >\n            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\n            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\n          </svg>\n          <input\n            v-on:focus=\"showSearch = true\"\n            v-model=\"keyword\"\n            type=\"text\"\n            placeholder=\"Search...\"\n            @input=\"debouncedSearch\"\n          />\n        </form>\n      </div>\n\n      <div class=\"user-menu\">\n        <div class=\"user-name-text\">{{ greeting }}, {{ nickname }}!</div>\n        <div\n          class=\"user-menu-container\"\n          @mouseenter=\"showMenu = true\"\n          @mouseleave=\"showMenu = false\"\n        >\n          <div class=\"user-avatar\">\n            <!-- 头像加载成功时显示图片 -->\n            <img\n              v-if=\"userAvatar\"\n              :src=\"userAvatar\"\n              alt=\"用户头像\"\n              @error=\"handleAvatarError\"\n              class=\"avatar-image\"\n            />\n\n            <!-- 头像为空时，显示文字头像 -->\n            <div v-else class=\"text-avatar\">\n              <div class=\"text-avatar-inner\">\n                {{ avatarInitial }}\n              </div>\n            </div>\n          </div>\n\n          <!-- 悬浮菜单 -->\n          <transition name=\"menu-fade\">\n            <div v-show=\"showMenu\" class=\"floating-menu\">\n              <div class=\"menu-header\">\n                <div class=\"user-info\">\n                  <div class=\"user-name\">{{ nickname }}</div>\n                  <div class=\"user-email\">{{ username }}</div>\n                </div>\n              </div>\n\n              <div class=\"menu-body\">\n                <div class=\"menu-item\" @click=\"showUpload\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    class=\"feather feather-upload\"\n                  >\n                    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\n                    <polyline points=\"17 8 12 3 7 8\"></polyline>\n                    <line x1=\"12\" y1=\"3\" x2=\"12\" y2=\"15\"></line></svg\n                  >上传文件\n                </div>\n                <div class=\"menu-item\" @click=\"showSettings\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    class=\"feather feather-settings\"\n                  >\n                    <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\n                    <path\n                      d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"\n                    ></path>\n                  </svg>\n                  账户设置\n                </div>\n                <div class=\"divider\"></div>\n                <div class=\"menu-item logout\" @click=\"logout\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    stroke-width=\"2\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    class=\"feather feather-log-out\"\n                  >\n                    <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\"></path>\n                    <polyline points=\"16 17 21 12 16 7\"></polyline>\n                    <line x1=\"21\" y1=\"12\" x2=\"9\" y2=\"12\"></line>\n                  </svg>\n                  退出登录\n                </div>\n              </div>\n            </div>\n          </transition>\n        </div>\n      </div>\n    </div>\n\n    <div v-if=\"showSearch\" class=\"search-content\">\n      <!-- 搜索加载动画 -->\n      <div v-if=\"searchLoading\" class=\"loading-container\">\n        <div class=\"loading-spinner\"></div>\n        <div class=\"loading-text\">搜索中...</div>\n      </div>\n\n      <div v-else>\n        <!-- 搜索历史部分 - 移到上面 -->\n        <div class=\"search-history-section\">\n          <div class=\"search-header\">\n            <div class=\"search-history-title\">#搜索历史</div>\n            <div\n              v-if=\"searchHistory.length > 0\"\n              class=\"clear-history\"\n              @click=\"clearHistory\"\n            >\n              清空历史记录\n            </div>\n          </div>\n\n          <div v-if=\"searchHistory.length === 0\" class=\"search-history-null\">\n            暂无搜索记录\n          </div>\n\n          <div v-else class=\"search-history\">\n            <div\n              class=\"search-history-item\"\n              v-for=\"(item, index) in searchHistory\"\n              :key=\"index\"\n              @click=\"useHistorySearch(item)\"\n            >\n              <div class=\"search-history-item-text\">{{ item }}</div>\n            </div>\n          </div>\n        </div>\n\n        <!-- 搜索结果展示 -->\n        <div v-if=\"keyword\" class=\"search-result\">\n          <div class=\"result-header\">\n            <div class=\"result-title\">搜索结果</div>\n            <div class=\"result-count\">共 {{ searchResult.length }} 条结果</div>\n          </div>\n\n          <div v-if=\"searchResult.length === 0\" class=\"search-empty\">\n            未找到相关结果\n          </div>\n\n          <div v-else class=\"recommend\">\n            <div\n              class=\"recommend-item\"\n              v-for=\"item in searchResult\"\n              :key=\"item.paperId\"\n            >\n              <!-- 使用与推荐页相同的卡片结构 -->\n              <img :src=\"item.pdfUrl\" alt=\"pdf\" class=\"pdf-view\" />\n              <div class=\"item-text\">\n                <div class=\"item-title\">{{ item.title }}</div>\n                <div class=\"item-author\">{{ item.authors }}</div>\n                <div class=\"item-year\">{{ item.year }}</div>\n              </div>\n\n              <div class=\"pdf-button\">\n                <div class=\"tools-button\">\n                  <div\n                    :class=\"['collect-button', { selected: item.isFavorited }]\"\n                    @click=\"toggleFavorite(item.paperId)\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"2\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      class=\"feather feather-star\"\n                    >\n                      <polygon\n                        points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"\n                      ></polygon>\n                    </svg>\n                    <div class=\"collect-text\">\n                      {{ item.isFavorited ? \"已收藏\" : \"收藏\" }}\n                    </div>\n                  </div>\n                </div>\n\n                <div class=\"tools-button\">\n                  <div class=\"pdf-download-button\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"2\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      class=\"feather feather-download\"\n                    >\n                      <path\n                        d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"\n                      ></path>\n                      <polyline points=\"7 10 12 15 17 10\"></polyline>\n                      <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n                    </svg>\n                    <div class=\"pdf-download-text\">download</div>\n                  </div>\n\n                  <div\n                    class=\"pdf-view-button\"\n                    @click=\"viewPdf(item.pdfUrl, item.paperId)\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      stroke-width=\"2\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      class=\"feather feather-book-open\"\n                    >\n                      <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\n                      <path\n                        d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"\n                      ></path>\n                    </svg>\n                    <div class=\"pdf-view-text\">view</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"content\" v-if=\"!showSearch\">\n      <!-- 加载动画 -->\n      <div v-if=\"loading\" class=\"loading-container\">\n        <div class=\"loading-spinner\"></div>\n        <div class=\"loading-text\">加载中...</div>\n      </div>\n\n      <div v-else class=\"recommend\">\n        <div class=\"recommend-item\" v-for=\"item in papers\" :key=\"item.paperId\">\n          <img :src=\"item.pdfUrl\" alt=\"pdf\" class=\"pdf-view\" />\n          <div class=\"item-text\">\n            <div class=\"item-title\">{{ item.title }}</div>\n            <div class=\"item-author\">{{ item.authors }}</div>\n            <div class=\"item-year\">{{ item.year }}</div>\n            <div v-if=\"selectedIndex === 2\" class=\"view-time\">\n              {{ formatViewTime(item.viewTime) }}\n            </div>\n            <div v-if=\"selectedIndex === 3\" class=\"favorite-time\">\n              {{ formatViewTime(item.favoriteTime) }}\n            </div>\n          </div>\n\n          <div class=\"pdf-button\">\n            <div class=\"tools-button\">\n              <div\n                :class=\"['collect-button', { selected: item.isFavorited }]\"\n                @click=\"toggleFavorite(item.paperId)\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  class=\"feather feather-star\"\n                >\n                  <polygon\n                    points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"\n                  ></polygon>\n                </svg>\n                <div class=\"collect-text\">\n                  {{ item.isFavorited ? \"已收藏\" : \"收藏\" }}\n                </div>\n              </div>\n            </div>\n\n            <div class=\"tools-button\">\n              <div class=\"pdf-download-button\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  class=\"feather feather-download\"\n                >\n                  <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\n                  <polyline points=\"7 10 12 15 17 10\"></polyline>\n                  <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n                </svg>\n                <div class=\"pdf-download-text\">download</div>\n              </div>\n\n              <div\n                class=\"pdf-view-button\"\n                @click=\"viewPdf(item.pdfUrl, item.paperId)\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  class=\"feather feather-book-open\"\n                >\n                  <path d=\"M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z\"></path>\n                  <path d=\"M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z\"></path>\n                </svg>\n                <div class=\"pdf-view-text\">view</div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- 添加设置对话框组件 -->\n    <settings-dialog\n      :visible.sync=\"showSettingsDialog\"\n      :current-settings=\"currentSettings\"\n      @settings-updated=\"handleSettingsUpdated\"\n    />\n\n    <!-- 添加上传对话框组件 -->\n    <upload-dialog\n      :visible.sync=\"showUploadDialog\"\n      @upload-success=\"handleUploadSuccess\"\n    />\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { debounce } from \"lodash\";\nimport SettingsDialog from \"../components/SettingsDialog.vue\";\nimport UploadDialog from \"../components/UploadDialog.vue\";\n\nexport default {\n  name: \"HomePage\",\n  components: {\n    SettingsDialog,\n    UploadDialog,\n  },\n  data() {\n    return {\n      keyword: \"\",\n      username: \"Guest\",\n      nickname: \"Rick\",\n      userAvatar: null,\n      avatarLoadError: false,\n      searchValue: \"\",\n      selectedIndex: 0,\n      papers: [], // 当前显示的论文列表\n      options: [\n        {\n          text: \"recommend\",\n          icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"></path></svg>`,\n        },\n        {\n          text: \"newest\",\n          icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle></svg>`,\n        },\n        {\n          text: \"History\",\n          icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-clock\"><circle cx=\"12\" cy=\"12\" r=\"10\"></circle><polyline points=\"12 6 12 12 16 14\"></polyline></svg>`,\n        },\n        {\n          text: \"collect\",\n          icon: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-star\"><polygon points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\"></polygon></svg>`,\n        },\n      ],\n      searchHistory: JSON.parse(localStorage.getItem(\"searchHistory\") || \"[]\"),\n      searchResult: [],\n      showMenu: false,\n      showSearch: false,\n      unreadCount: 3, // 模拟未读消息\n      debouncedSearch: null,\n      loading: false,\n      searchLoading: false,\n      showSettingsDialog: false,\n      currentSettings: null,\n      showUploadDialog: false,\n    };\n  },\n  computed: {\n    greeting() {\n      const hour = new Date().getHours();\n      if (hour < 5) {\n        return \"Night Owl\";\n      } else if (hour < 12) {\n        return \"Morning\";\n      } else if (hour < 18) {\n        return \"Afternoon\";\n      } else {\n        return \"Evening\";\n      }\n    },\n    avatarInitial() {\n      if (this.nickname) {\n        return this.nickname.charAt(0).toUpperCase();\n      }\n      return this.username.charAt(0).toUpperCase();\n    },\n  },\n  methods: {\n    async getLatest() {\n      try {\n        const response = await axios.get(\n          `http://localhost:8080/api/papers/latest`,\n          {\n            params: {\n              username: this.username,\n            },\n          }\n        );\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取最新论文失败\", error);\n      }\n    },\n\n    async getRecommend() {\n      try {\n        const response = await axios.get(\n          `http://localhost:8080/api/papers/recommend`,\n          {\n            params: {\n              username: this.username,\n              limit: 100,\n            },\n          }\n        );\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取推荐失败\", error);\n      }\n    },\n\n    async handleSearch() {\n      if (!this.keyword.trim()) return;\n\n      this.searchLoading = true;\n      try {\n        const response = await axios.get(\n          `http://localhost:8080/api/papers/search`,\n          {\n            params: {\n              keyword: this.keyword,\n              username: this.username,\n            },\n          }\n        );\n\n        this.searchResult = response.data.data;\n\n        // 将搜索关键词添加到历史记录\n        if (!this.searchHistory.includes(this.keyword)) {\n          this.searchHistory.unshift(this.keyword);\n          // 限制历史记录数量\n          if (this.searchHistory.length > 10) {\n            this.searchHistory.pop();\n          }\n          localStorage.setItem(\n            \"searchHistory\",\n            JSON.stringify(this.searchHistory)\n          );\n        }\n      } catch (error) {\n        console.error(\"搜索失败\", error);\n      } finally {\n        this.searchLoading = false;\n      }\n    },\n\n    async selectOption(index) {\n      this.showSearch = false;\n      this.loading = true;\n      this.selectedIndex = index;\n      try {\n        switch (index) {\n          case 0:\n            await this.getRecommend();\n            break;\n          case 1:\n            await this.getLatest();\n            break;\n          case 2:\n            await this.getHistory();\n            break;\n          case 3:\n            await this.getFavorites();\n            break;\n        }\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    handleAvatarError() {\n      this.avatarLoadError = true;\n      this.userAvatar = null; // 清空错误头像\n    },\n    showProfile() {\n      console.log(\"打开个人资料\");\n    },\n    showNotifications() {\n      console.log(\"查看通知\");\n    },\n    showSettings() {\n      this.currentSettings = {\n        username: this.username,\n        nickname: this.nickname,\n        avatar: this.userAvatar,\n      };\n      this.showSettingsDialog = true;\n    },\n    logout() {\n      localStorage.removeItem(\"isLoggedIn\");\n      this.$router.push(\"/\");\n    },\n    async toggleFavorite(paperId) {\n      try {\n        const paper = [...this.papers, ...this.searchResult].find(\n          (p) => p.paperId === paperId\n        );\n        if (!paper) return;\n\n        if (paper.isFavorited) {\n          // 取消收藏\n          const response = await axios.delete(\n            `http://localhost:8080/api/papers/favorite`,\n            {\n              params: {\n                username: this.username,\n                paperId: paperId,\n              },\n            }\n          );\n          if (response.data.code === 200) {\n            this.updatePaperInAllLists(response.data.data);\n            // 如果在收藏列表页面，立即移除该论文\n            if (this.selectedIndex === 3) {\n              this.papers = this.papers.filter((p) => p.paperId !== paperId);\n            }\n          }\n        } else {\n          // 添加收藏\n          const response = await axios.post(\n            `http://localhost:8080/api/papers/favorite`,\n            null,\n            {\n              params: {\n                username: this.username,\n                paperId: paperId,\n              },\n            }\n          );\n          if (response.data.code === 200) {\n            this.updatePaperInAllLists(response.data.data);\n          }\n        }\n      } catch (error) {\n        console.error(\"收藏操作失败\", error);\n      }\n    },\n\n    updatePaperInAllLists(paperData) {\n      // 更新推荐/历史列表\n      const paperIndex = this.papers.findIndex(\n        (p) => p.paperId === paperData.paperId\n      );\n      if (paperIndex !== -1) {\n        this.$set(this.papers, paperIndex, {\n          ...this.papers[paperIndex],\n          isFavorited: paperData.isFavorited,\n        });\n      }\n\n      // 更新搜索结果列表\n      const searchIndex = this.searchResult.findIndex(\n        (p) => p.paperId === paperData.paperId\n      );\n      if (searchIndex !== -1) {\n        this.$set(this.searchResult, searchIndex, {\n          ...this.searchResult[searchIndex],\n          isFavorited: paperData.isFavorited,\n        });\n      }\n    },\n\n    viewPdf(pdfUrl, paperId) {\n      console.log(\"查看pdf\", paperId);\n      window.open(pdfUrl, \"_blank\");\n      console.log(\"查看pdf\", this.username, paperId);\n      axios\n        .post(\n          `http://localhost:8080/api/papers/view?username=${this.username}&paperId=${paperId}`\n        )\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.error(\"查看pdf失败\", error);\n        });\n    },\n\n    async getHistory() {\n      try {\n        const response = await axios.get(\n          `http://localhost:8080/api/papers/view-history`,\n          {\n            params: {\n              username: this.username,\n            },\n          }\n        );\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取浏览历史失败\", error);\n      }\n    },\n\n    formatViewTime(timeString) {\n      if (!timeString) return \"\";\n      const viewTime = new Date(timeString);\n      const now = new Date();\n      const diff = now - viewTime;\n\n      // 小于1小时\n      if (diff < 3600000) {\n        const minutes = Math.floor(diff / 60000);\n        return `${minutes} 分钟前`;\n      }\n      // 小于24小时\n      if (diff < 86400000) {\n        const hours = Math.floor(diff / 3600000);\n        return `${hours} 小时前`;\n      }\n      // 小于7天\n      if (diff < 604800000) {\n        const days = Math.floor(diff / 86400000);\n        return `${days} 天前`;\n      }\n      // 其他情况显示具体日期\n      return viewTime.toLocaleDateString();\n    },\n\n    async getFavorites() {\n      try {\n        const response = await axios.get(\n          `http://localhost:8080/api/papers/favorites`,\n          {\n            params: {\n              username: this.username,\n            },\n          }\n        );\n        this.papers = response.data.data;\n      } catch (error) {\n        console.error(\"获取收藏列表失败\", error);\n      }\n    },\n\n    useHistorySearch(keyword) {\n      this.keyword = keyword;\n      this.handleSearch();\n    },\n\n    clearHistory() {\n      this.searchHistory = [];\n      localStorage.removeItem(\"searchHistory\");\n    },\n\n    handleSettingsUpdated(newSettings) {\n      // 更新本地状态\n      this.username = newSettings.username;\n      this.nickname = newSettings.nickname;\n      this.userAvatar = newSettings.avatar;\n      this.avatarLoadError = false; // 重置头像加载错误状态\n\n      // 如果头像加载失败，会触发 handleAvatarError\n      const img = new Image();\n      img.onerror = () => {\n        this.handleAvatarError();\n      };\n      img.src = newSettings.avatar;\n      this.getUserInfo(this.username)\n      // 可以添加提示\n      alert(\"设置已更新\");\n    },\n\n    showUpload() {\n      this.showUploadDialog = true;\n    },\n\n    handleUploadSuccess(paperData) {\n      // 可以根据需要刷新论文列表\n      this.selectOption(this.selectedIndex);\n      // 可以将新上传的论文添加到当前列表\n      if (this.selectedIndex === 1) {\n        // 如果在\"最新\"标签页\n        this.papers.unshift(paperData);\n      }\n      // 显示成功提示\n      alert(\"论文上传成功\");\n    },\n\n    getUserInfo(token) {\n      const username = token;\n      console.log(token, \"token\")\n      axios\n        .get(\"http://localhost:8080/api/user/info\", {\n          params: {\n            username: username,\n          },\n        })\n        .then((response) => {\n          console.log(\"获取用户信息成功:\", response);\n          this.username = response.data.data.username;\n          this.userAvatar = response.data.data.avatar;\n          this.nickname = response.data.data.nickname;\n        })\n        .catch((error) => {\n          console.error(\"获取用户信息失败:\", error);\n        });\n    },\n  },\n  mounted() {\n    \n    this.selectOption(0); // 默认加载推荐\n  },\n  created() {\n    this.getUserInfo(String(this.$route.params.username));\n    this.debouncedSearch = debounce(this.handleSearch, 1000);\n  },\n};\n</script>\n\n<style scoped src=\"../components/css/Home.css\"></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}