{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from 'axios';\nimport * as THREE from \"three\";\nimport FOG from \"vanta/src/vanta.fog\"; // 引入FOG效果\n\nexport default {\n  name: 'UserLogin',\n  data() {\n    return {\n      avatar: null,\n      isError: '',\n      showLoginForm: false,\n      captchaSrc: \"\"\n    };\n  },\n  methods: {\n    getCaptcha() {\n      axios.get('http://localhost:8080/captcha', {\n        responseType: 'blob'\n      }).then(res => {\n        let imgUrl = URL.createObjectURL(res.data);\n        this.captchaSrc = imgUrl; // 绑定到 Vue 的 data 变量\n      }).catch(error => console.error(\"获取验证码失败:\", error));\n    },\n    triggerAvatar() {\n      this.$refs.avatarInput.click();\n    },\n    chooseAvatar(event) {\n      const file = event.target.files[0]; // 获取选择的文件\n      if (file) {\n        // 创建预览的URL\n        const reader = new FileReader();\n        reader.onload = e => {\n          this.avatar = e.target.result; // 设置头像\n        };\n        reader.readAsDataURL(file); // 读取文件为DataURL\n      }\n    }\n  },\n  mounted() {\n    // 在mounted中初始化VANTA效果\n    this.vantaEffect = FOG({\n      el: this.$refs.vantaRef,\n      // 绑定到ref\n      THREE: THREE,\n      mouseControls: true,\n      touchControls: true,\n      gyroControls: false,\n      minHeight: 200.00,\n      minWidth: 200.00,\n      highlightColor: 0xf5f5bc,\n      blurFactor: 0.90,\n      zoom: 1\n    });\n  },\n  beforeDestroy() {\n    // 销毁VANTA效果\n    if (this.vantaEffect) {\n      this.vantaEffect.destroy();\n    }\n  }\n};","map":{"version":3,"names":["axios","THREE","FOG","name","data","avatar","isError","showLoginForm","captchaSrc","methods","getCaptcha","get","responseType","then","res","imgUrl","URL","createObjectURL","catch","error","console","triggerAvatar","$refs","avatarInput","click","chooseAvatar","event","file","target","files","reader","FileReader","onload","e","result","readAsDataURL","mounted","vantaEffect","el","vantaRef","mouseControls","touchControls","gyroControls","minHeight","minWidth","highlightColor","blurFactor","zoom","beforeDestroy","destroy"],"sources":["src/components/Login.vue"],"sourcesContent":["<template>\n    <div class=\"background\">\n\n        <div v-show=\"showLoginForm\" class=\"login-container\">\n            <div class=\"login-title\">\n                <div class=\"login-title-text\">{{ showLoginForm ? 'Login' : 'Register' }}</div>\n                <div class=\"login-title-subtext\">Numerous related previews available</div>\n            </div>\n\n            <div class=\"login-form\">\n                <div class=\"login-form-item\">\n                    <div class=\"login-user-name\">\n                        <div class=\"login-user-name-label\">Username</div>\n\n                        <input class=\"login-user-name-input\" type=\"text\" placeholder=\"Enter your username\">\n\n                    </div>\n\n                    <div class=\"login-password\">\n                        <div class=\"login-password-label\">Password</div>\n\n                        <input class=\"login-password-input\" type=\"password\" placeholder=\"Enter your password\">\n\n                    </div>\n\n                    <div class=\"captcha\">\n                        <input class=\"captcha-input\" type=\"text\" placeholder=\"Enter your captcha\">\n                        <img class=\"captcha-img\" @click=\"getCaptcha\" :src=\"captchaSrc\">\n                    </div>\n                </div>\n\n\n                <div class=\"tips\">\n                    <div class=\"tips-text\" :style=\"{ visibility: isError === '' ? 'hidden' : 'visible' }\">\n                        {{ isError }}\n                    </div>\n\n                    <div class=\"forget-button\">forget password?</div>\n                </div>\n\n                <button class=\"login-button\">Login</button>\n            </div>\n\n            <div class=\"register-tips\">New User? <span class=\"register-tips-button\"\n                    @click=\"showLoginForm = !showLoginForm\">Signup</span></div>\n\n        </div>\n\n        <div v-show=\"!showLoginForm\" class=\"register-container\" :style=\"{ height: showLoginForm ? '650px' : '780px' }\">\n            <div class=\"register-title\">\n                <div class=\"register-title-text\">Register</div>\n\n            </div>\n\n            <div class=\"register-form-item\">\n                <div class=\"avatar\">\n                    <input type=\"file\" class=\"avatar-input\"  ref=\"avatarInput\" style=\"display: none;\"\n                        @change=\"chooseAvatar\" />\n                    <img :src=\"avatar\" alt=\"\" class=\"choose-avatar\" @click=\"triggerAvatar\" />\n                </div>\n\n                <div class=\"register-nickname\">\n                    <div class=\"register-nickname-label\">Nickname</div>\n                    <input class=\"register-nickname-input\" type=\"text\" placeholder=\"Enter your nickname\">\n                </div>\n\n                <div class=\"register-user-name\">\n                    <div class=\"register-user-name-label\">Username</div>\n\n                    <input class=\"register-user-name-input\" type=\"text\" placeholder=\"Enter your username\">\n\n                </div>\n\n                <div class=\"register-password\">\n                    <div class=\"register-password-label\">Password</div>\n\n                    <input class=\"register-password-input\" type=\"password\" placeholder=\"Enter your password\">\n                    <input class=\"register-password-input\" type=\"password\" placeholder=\"Confirm your password\">\n\n                </div>\n\n            </div>\n\n            <button class=\"register-button\">Register</button>\n            <div class=\"register-tips\">Already have an account? <span class=\"register-tips-button\"\n                    @click=\"showLoginForm = !showLoginForm\">Login</span></div>\n        </div>\n        <div class=\"login-footer\" ref=\"vantaRef\" :style=\"{ height: showLoginForm ? '650px' : '780px' }\">\n            <div class=\"login-footer-text-title\">WELLCOME</div>\n            <div class=\"login-footer-text-subtext\">{{ showLoginForm ? 'BACK!' : 'SIGNUP!' }}</div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport * as THREE from \"three\";\nimport FOG from \"vanta/src/vanta.fog\";  // 引入FOG效果\n\nexport default {\n    name: 'UserLogin',\n    data() {\n        return {\n            avatar: null,\n            isError: '',\n            showLoginForm: false,\n            captchaSrc: \"\"\n        }\n    },\n\n\n    methods: {\n        getCaptcha() {\n    axios.get('http://localhost:8080/captcha', { responseType: 'blob' })\n        .then(res => {\n            let imgUrl = URL.createObjectURL(res.data);\n            this.captchaSrc = imgUrl;  // 绑定到 Vue 的 data 变量\n        })\n                .catch(error => console.error(\"获取验证码失败:\", error));\n        },\n\n\n        triggerAvatar() {\n            this.$refs.avatarInput.click();\n        },\n        chooseAvatar(event) {\n            const file = event.target.files[0]; // 获取选择的文件\n            if (file) {\n                // 创建预览的URL\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    this.avatar = e.target.result; // 设置头像\n                };\n                reader.readAsDataURL(file); // 读取文件为DataURL\n            }\n        },\n    },\n    mounted() {\n        // 在mounted中初始化VANTA效果\n        this.vantaEffect = FOG({\n            el: this.$refs.vantaRef,  // 绑定到ref\n            THREE: THREE,\n            mouseControls: true,\n            touchControls: true,\n            gyroControls: false,\n            minHeight: 200.00,\n            minWidth: 200.00,\n            highlightColor: 0xf5f5bc,\n            blurFactor: 0.90,\n            zoom: 1\n        });\n    },\n    beforeDestroy() {\n        // 销毁VANTA效果\n        if (this.vantaEffect) {\n            this.vantaEffect.destroy();\n        }\n    }\n}\n</script>\n\n<style scoped src=\"./css/login.css\"></style>"],"mappings":";;;AA+FA,OAAAA,KAAA;AACA,YAAAC,KAAA;AACA,OAAAC,GAAA;;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,OAAA;MACAC,aAAA;MACAC,UAAA;IACA;EACA;EAGAC,OAAA;IACAC,WAAA;MACAV,KAAA,CAAAW,GAAA;QAAAC,YAAA;MAAA,GACAC,IAAA,CAAAC,GAAA;QACA,IAAAC,MAAA,GAAAC,GAAA,CAAAC,eAAA,CAAAH,GAAA,CAAAV,IAAA;QACA,KAAAI,UAAA,GAAAO,MAAA;MACA,GACAG,KAAA,CAAAC,KAAA,IAAAC,OAAA,CAAAD,KAAA,aAAAA,KAAA;IACA;IAGAE,cAAA;MACA,KAAAC,KAAA,CAAAC,WAAA,CAAAC,KAAA;IACA;IACAC,aAAAC,KAAA;MACA,MAAAC,IAAA,GAAAD,KAAA,CAAAE,MAAA,CAAAC,KAAA;MACA,IAAAF,IAAA;QACA;QACA,MAAAG,MAAA,OAAAC,UAAA;QACAD,MAAA,CAAAE,MAAA,GAAAC,CAAA;UACA,KAAA5B,MAAA,GAAA4B,CAAA,CAAAL,MAAA,CAAAM,MAAA;QACA;QACAJ,MAAA,CAAAK,aAAA,CAAAR,IAAA;MACA;IACA;EACA;EACAS,QAAA;IACA;IACA,KAAAC,WAAA,GAAAnC,GAAA;MACAoC,EAAA,OAAAhB,KAAA,CAAAiB,QAAA;MAAA;MACAtC,KAAA,EAAAA,KAAA;MACAuC,aAAA;MACAC,aAAA;MACAC,YAAA;MACAC,SAAA;MACAC,QAAA;MACAC,cAAA;MACAC,UAAA;MACAC,IAAA;IACA;EACA;EACAC,cAAA;IACA;IACA,SAAAX,WAAA;MACA,KAAAA,WAAA,CAAAY,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}